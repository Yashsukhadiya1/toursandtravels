@model IEnumerable<toursandtravels.Models.Notification>
@{
	ViewData["Title"] = "Admin - Notifications";
	var unreadCount = Model.Count(n => !n.IsRead);
}

<div class="d-flex justify-content-between align-items-center mb-4">
	<h2>Notifications</h2>
	@if (unreadCount > 0)
	{
		<button id="markAllRead" class="btn btn-outline-primary">
			<i class="bi bi-check-all"></i> Mark All Read
		</button>
	}
</div>

<div id="notificationList">
	@if (!Model.Any())
	{
		<div class="alert alert-info">No notifications.</div>
	}
	else
	{
		<div class="list-group">
			@foreach (var notification in Model)
			{
				<div class="list-group-item @(!notification.IsRead ? "list-group-item-info" : "")" data-notification-id="@notification.Id">
					<div class="d-flex w-100 justify-content-between">
						<div class="mb-1">
							<h6 class="mb-1">@notification.Message</h6>
							<p class="mb-0 text-muted">
								<small>@notification.CreatedAt.ToString("yyyy-MM-dd HH:mm")</small>
							</p>
						</div>
						@if (!notification.IsRead)
						{
							<button class="btn btn-sm btn-outline-secondary mark-read" data-notification-id="@notification.Id">
								<i class="bi bi-check"></i> Mark Read
							</button>
						}
						else
						{
							<span class="badge bg-success">Read</span>
						}
					</div>
				</div>
			}
		</div>
	}
</div>

<div class="mt-3">
	<a href="@Url.Action("Bookings", "Admin")" class="btn btn-primary">
		<i class="bi bi-arrow-left"></i> Back to Bookings
	</a>
</div>

@section Scripts {
	<script>
		document.querySelectorAll('.mark-read').forEach(btn => {
			btn.addEventListener('click', function() {
				const notificationId = this.dataset.notificationId;
				markNotificationRead(notificationId);
			});
		});

		document.getElementById('markAllRead')?.addEventListener('click', function() {
			fetch('@Url.Action("MarkAllNotificationsRead", "Admin")', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
			})
			.then(response => response.json())
			.then(data => {
				if (data.success) {
					location.reload();
				}
			});
		});

		function markNotificationRead(notificationId) {
			const formData = new FormData();
			formData.append('id', notificationId);
			
			fetch('@Url.Action("MarkNotificationRead", "Admin")', {
				method: 'POST',
				body: formData
			})
			.then(response => response.json())
			.then(data => {
				if (data.success) {
					const item = document.querySelector(`[data-notification-id="${notificationId}"]`);
					item.classList.remove('list-group-item-info');
					const btn = item.querySelector('.mark-read');
					if (btn) {
						btn.outerHTML = '<span class="badge bg-success">Read</span>';
					}
				}
			});
		}
	</script>
}

